<pre class='metadata'>
Title: Hydra Core Vocabulary
Shortname: hydra
Level: 1
Status: LD
Group: HydraCG
URL: https://www.hydra-cg.com/spec/latest/core/
!Author: Markus Lanthaler
!Author: Karol Szczepanski
Editor: Markus Lanthaler
Editor: Karol Szczepanski
Abstract: Hydra is a lightweight vocabulary to create hypermedia-driven Web APIs. By specifying a number of concepts commonly used in Web APIs it enables the creation of generic API clients.
Markup Shorthands: markdown yes
Markup Shorthands: dfn yes
Line Numbers: yes
</pre>
<style type="text/css">
.example > .marker { text-transform: none; }
table.def th { width: 8em; }
.warning {
    margin: 1em auto;
    padding: 0.5em;
    border: 0.5em;
    border-left-style: solid;
    page-break-inside: avoid;
    border-color: #ff0000;
    background: #fbe9e9;
    background: var(--note-bg);
    color: black;
    color: var(--note-text);
    overflow: auto;
</style>

Status of This Document {#sotd}
=======================
This specification was published by the [[!HydraCG]].
It is not a W3C Standard, nor it is on the W3C Standards Track.
Please note that under the
*W3C Community Contributor License Agreement (CLA)*
there is a limited opt-out and other conditions apply.
Learn more about *W3C Community and Business Groups*.

## Conventions ## {#conventions}

Within this document, the following namespace prefix bindings are used:
<table class="def">
    <tr>
        <th>Prefix</th>
        <th>Namespace</th>
    </tr>
    <tr>
        <td>hydra:</td>
        <td>http://www.w3.org/ns/hydra/core#</td>
    </tr>
    <tr>
        <td>rdf:</td>
        <td>http://www.w3.org/1999/02/22-rdf-syntax-ns#</td>
    </tr>
    <tr>
        <td>rdfs:</td>
        <td>http://www.w3.org/2000/01/rdf-schema#</td>
    </tr>
    <tr>
        <td>xsd:</td>
        <td>http://www.w3.org/2001/XMLSchema#</td>
    </tr>
    <tr>
        <td>owl:</td>
        <td>http://www.w3.org/2002/07/owl#</td>
    </tr>
    <tr>
        <td>vs:</td>
        <td>http://www.w3.org/2003/06/sw-vocab-status/ns#</td>
    </tr>
    <tr>
        <td>dc:</td>
        <td>http://purl.org/dc/terms/</td>
    </tr>
    <tr>
        <td>cc:</td>
        <td>http://creativecommons.org/ns#</td>
    </tr>
    <tr>
        <td>schema:</td>
        <td>http://schema.org/</td>
    </tr>
</table>

Introduction {#introduction}
============

Note: This section is non-normative.

Coping with the ever-increasing amount of data becomes increasingly
challenging. To alleviate the information overload put on people,
systems are progressively being connected directly to each other.
They exchange, analyze, and manipulate humongous amounts of data
without any human interaction. Most current solutions, however,
do not exploit the whole potential of the architecture of the World
Wide Web and completely ignore the possibilities offered by Linked Data
technologies.

The combination of the REST architectural style, and the Linked
Data principles offer opportunities to advance the Web of machines
in a similar way that hypertext did for the human Web. Most
building blocks exist already and are in place, but they are rarely
used together. Hydra tries to fill that gap. It allows data
to be enriched with machine-readable affordances which enable interaction.
This not only addresses the problem that Linked Data is still mostly
read-only, but it also paves the way for a completely new breed
of interoperable Web APIs. The fact that it enables the creation
of composable contracts means that interaction models of Web APIs
can be reused at an unprecedented granularity.

Hydra at a Glance {#hydra-at-a-glance}
=================

Note: This section is non-normative.

The basic idea behind Hydra is to provide a vocabulary which enables a
server to advertise valid state transitions to a client. A client can
then use this information to construct requests (i.e. compliant with
an HTTP protocol) which modify the server’s state so that a certain
desired goal is achieved. Since all the information about the valid state
transitions is exchanged in a machine-processable way at runtime
instead of being hardcoded into the client at design time, clients
can be decoupled from the server and adapt to changes more easily.

The namespace of the Hydra core vocabulary
is `http://www.w3.org/ns/hydra/core#`, and the suggested prefix
is `hydra`. The figure below illustrates the vocabulary
(the figure’s goal is to show how Hydra is used rather than its precise
definition).

<img src="vocabulary.png" alt="The Hydra core vocabulary" />

An alphabetical index of the classes and properties of Hydra
is given below. All the terms are hyperlinked to their detailed
description for quick reference.

Using Hydra {#using-hydra}
===========

Throughout this section, a simple Web API featuring an issue tracker
will be used to illustrate how Hydra can be used. The Web API enables
its users to file new issues, modify or delete existing ones, and
to comment them. For the sake of simplicity, orthogonal aspects such
as authentication or authorization are not covered.

## Adding Affordances to Representations ## {#adding-affordances-to-representations}

The exemplary Web API has to expose representations of issues and
comments. To enable interaction with those resources, a client has
to know which operations the server supports. In human-facing
websites such affordances are typically exposed by links and forms
and described in natural language. Unfortunately, machines can not
interpret such information easily. The solution that presents itself
is to reduce the language to a few unambiguous concepts which are easily
recognizable by a machine client. Hydra formalizes such concepts.

The simplest and most important affordance on the Web are hyperlinks.
Without them, it would be impossible to browse the Web.
Users typically select the link based on the text it is labeled with.
To give machines a similar understanding, links can be annotated
with a link relation type&mdash;a registered token or a URI identifying
the semantics of the link. The following example shows how such
a typed link is used in HTML to reference a stylesheet.

<div class="example" heading="A typed link referencing a stylesheet as used in HTML">
<xmp highlight="html" line-highlight="2">
    <link href="http://www.example.com/styles.css"
          rel="stylesheet" />
</xmp>
</div>

In Linked Data, the link relation type corresponds to the property itself.
An example in JSON-LD would thus look as follows.

<div class="example" heading="Referencing a stylesheet in JSON-LD">
<pre highlight="json-ld" line-highlight="2">
{
    "urn:iana:link-relations:stylesheet": {
        "@id": "http://www.example.com/styles.css"
    }
}
</pre>
</div>

Generally, a client decides whether to follow a link or not based on
the link relation (or property in the case of Linked Data) which
defines its semantics. There are however also clients such as Web crawlers
which simply follow every link intended to be dereferenced. In HTML this
usually means that all links in anchor elements
(the &lt;a&gt; tag) are followed, but most references in link
elements (the &lt;link&gt; tag), such as used in the example
above, are ignored. Since in RDF serializations no such distinction exists,
the best a client can do is to blindly try to dereference all URIs.
It would thus be beneficial to describe in a machine-readable manner
if a property represents a link intended to be dereferenced or
solely an identifier. Hydra's [=Link=] class does just that. It can be
used to define properties that represent dereferencable links.
In the exemplary Web API used throughout this section, it can be
used to define a property linking issues to their comments:

<div class="example" heading="Defining properties representing hyperlinks using Hydra's Link class">
<pre highlight="json-ld" line-highlight="4">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/vocab#comments",
    "@type": "Link"
}
</pre>
</div>

In the example above, a property identified with the URL
`http://api.example.com/vocab#comments` is defined to be
of the type [=Link=]. This is enough information for a client understanding
Hydra to know that the value of the `comments` property
in the following example is intended to be dereferenced.

Note: It is recommended to dereference resources that are within an API's domain.
This may prevent possible issues with cross-site scripting or obtaining
resources which might have no meaning to the client or such that the client
would be unable to interpret. Still, there is no formal prohibition of
dereferencing resources linked with well-known properties, e.g.
*rdf:seeAlso*.

<div class="example" heading="Using a property defined to be a hyperlink">
<pre highlight="json-ld" line-highlight="3,7">
{
    "@context": {
        "comments": "http://api.example.com/vocab#comments"
    },
    "@id": "http://api.example.com/an-issue",
    "title": "An exemplary issue linking to its comments",
    "comments": { "@id": "http://api.example.com/an-issue/comments" }
}
</pre>
</div>

In the example above, the value of the `comments` property
is a JSON object with an `@id` member. This is JSON-LD's
convention to distinguish between strings and IRIs. By using JSON-LD's
type-coercion feature, the representation can be made even more idiomatic:

<div class="example" heading="Using JSON-LD's type-coercion feature to create idiomatic representations">
<pre highlight="json-ld" line-highlight="5,11">
{
    "@context": {
        "comments": {
            "@id": "http://api.example.com/vocab#comments",
            "@type": "@id"
        }
    },
    "@id": "http://api.example.com/an-issue",
    "title": "An exemplary issue linking to its comments",
    "comments":
        "http://api.example.com/an-issue/comments"
}
</pre>
</div>

While links are enough to build read-only Web APIs, more powerful
affordances are required to build read-write Web APIs. Thus, Hydra
introduces the notion of operations. Simply speaking, an
[=Operation=] represents the information necessary for a client
to construct valid HTTP requests in order to manipulate the server's
resource state. As such, the only required property of an
[=Operation=] is its [=method=]. Optionally, it is also possible
to describe what information the server [=expects=] or [=returns=],
including additional information about response status codes that
might be returned. This helps a developer to understand what to expect
when invoking an operation. This information has, however,
not to be considered as being complete; it is merely a hint.
Developers should, e.g., expect that other status codes might be returned
and program their clients accordingly.

The following example illustrates how representations can be
augmented with information that enables clients to interact with
them.

<div class="example" heading="A representation of an issue augmented with a delete operation">
<pre highlight="json-ld" line-highlight="2,6-11">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "/an-issue",
    "title": "An exemplary issue representation",
    "description": "This issue can be deleted with an HTTP DELETE request.",
    "operation": [
        {
            "@type": "Operation",
            "method": "DELETE"
        }
    ]
}
</pre>
</div>

The example above references Hydra's context to map properties such
as [=operation=] and [=method=] and values like [=Operation=] to URLs
that unambiguously identify these concepts. It would be similarly valid
JSON-LD if these mappings would be directly embedded into the representation
or if the full URLs would be used instead. Typically, however, the context
is the same for a lot of representations in a Web API and it thus makes
sense to reduce the response size by leveraging a remote context that
can easily be cached by a client.

Note: It is worth mentioning that due to the fact that Hydra is built on
RDF, which is a graph, it may happen that a related resource
(an object of the relation) may not be fully described in the
resource's payload.

In several circumstances (i.e. payload terms defined in
[=ApiDocumentation|API documentation=] sa described in
[[#documenting-a-web-api]] or [=IriTemplate=]
expected as a related resource as described in
[[#templated-links|Templated Links]]) client may
discover no additional statements describing it. These rules should
be considered by the client in following scenarios:

- in case of an object expected to be a hypermedia resource does not have
    all the necessary statements for which it is a subject, the client
    SHOULD look in the [=ApiDocumentation|API documentation=] for more details
- in case the mentioned object, after consulting  
    an [=ApiDocumentation|API documentation=], still does not have
    all the necessary statements for which it is a subject and both
    mentioned object's Url and Url of the initially obtained resource
    has the same scheme and authority (by means of [[!RFC3986]]
    sections 3.1 and 3.2), the client SHOULD dereference that URL.
    If the resource does not have the same scheme and authority the client
    MAY chose to dereference it (for example if the resource originates
    from another API well-known to the client)
- in case the mentioned object still does not have all the necessary
    statements for which it is a subject (i.e. dereferencing it failed
    or statements are missing), the client SHOULD either ignore the whole
    statement (i.e. for display purposes) or throw an exception
    (i.e. an [=IriTemplate=] is about to be resolved and dereferenced)

Example of each of the situations are as follows:

<div class="example" heading="IriTemplate details extraction">
<xmp highlight="http">
HTTP/1.1 200 OK
Content-Type: application/ld+json
Link: <http://api.example.com/doc/>; rel="http://www.w3.org/ns/hydra/core#apiDocumentation"

{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@graph": [{
        "@id": "http://api.example.com/attachments",
        "@type": "hydra:Collection",
        "api:attachmentByIssue": "api:AttachmentByIssueTemplate"
    }, {
        "@id": "http://api.example.com/issues",
        "@type": "hydra:Collection",
        "api:issueByName": "api:IssueByNameTemplate"
    }
}
</xmp>
<pre highlight="http">
HTTP/1.1 200 OK
Content-Type: application/ld+json

{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@graph": [{
        "@id": "api:AttachmentByIssueTemplate",
        "@type": "hydra:IriTemplate",
        "template": "http://api.example.com/attachments/{issue}",
        ...
    }]
}
</pre>
</div>

where:

- resource `http://api.example.com/attachments` should have
    an [=IriTemplate=] available as there is a complete definition
    of the template available at `http://api.example.com/doc/`
- resource `http://api.example.com/issues` should not have
    an IRI template exposed as there are no additional details available,
    neither in the initial resources' payload nor in the API documentation

Note: Keep in mind that any resource described by any hypermedia control
may fail at runtime due to various reasons. Operation details
such as [=returns=] or [=possibleStatus=] may also vary at runtime,
which means client SHOULD always verify received payloads at runtime.

## Documenting a Web API ## {#documenting-a-web-api}

In Web APIs, most representations are typically very similar.
Furthermore, resources often support the same operations. It thus
makes sense, to collect this information in a central documentation.
Traditionally, this has been done in natural language which forces
developers to hardcode that knowledge into their clients. Hydra
addresses this issue by making the documentation completely
machine-processable. The fact that all definitions can be identified
by URLs enables reuse at unprecedented granularity.

Hydra's [=ApiDocumentation=] class builds the foundation for
the description of a Web API. As shown in the following example,
Hydra describes an API by giving it a title, a short description, and
documenting its main entry point. Furthermore, the classes known to
be supported by the Web API and additional information about status
codes that might be returned can be documented. This information
may be used to automatically generate documentations in natural
language.

<div class="example" heading="The overall structure of a Hydra API documentation">
<pre highlight="json-ld" line-highlight="4-12">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/doc/",
    "@type": "ApiDocumentation",
    "title": "The name of the API",
    "description": "A short description of the API",
    "entrypoint": "URL of the API's main entry point",
    "supportedClass": [
        // "... Classes known to be supported by the Web API ..."
    ],
    "possibleStatus": [
        // "... Statuses that should be expected and handled properly ..."
    ]
}
</pre>
</div>

In Linked Data, properties are, just as everything else, identified
by IRIs and thus have global scope which implies that they have
independent semantics. In contrast, properties in data models as
used in common programming languages are class-dependent. Their
semantics depend on the class they belong to. In data models classes
are typically described by the properties they expose whereas in
Linked Data properties define to which classes they belong. If no
class is specified, it is assumed that a property may apply to every
class.

These differences have interesting consequences. For example, the
commonly asked question of which properties can be applied to an
instance of a specific class can typically not be answered for
Linked Data. Strictly speaking, any property which is not explicitly
forbidden could be applied. This stems from the fact that Linked Data
works under an open-world assumption whereas data models used by
programmers typically work under a closed-world assumption. The
difference is that when a closed world is assumed, everything that
is not known to be true is false or vice-versa. With an open-world
assumption the failure to derive a fact does not automatically imply
the opposite; it embraces the fact that the knowledge is incomplete.

Since Hydra may use classes to describe the information expected or
returned by an operation, it also defines a concept to describe the
properties known to be supported by a class. The following example
illustrates this feature. Instead of referencing properties directly,
[=supportedProperty=] references an intermediate data structure,
namely instances of the [=SupportedProperty=] class. This makes
it possible to define whether a specific property is required or
whether it is read-only or write-only depending on the class it is
associated with.

<div class="example" heading="Defining a class and documenting its supported properties">
<pre highlight="json-ld" line-highlight="3-16">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/doc/#Comment",
    "@type": "Class",
    "title": "The name of the class",
    "description": "A short description of the class.",
    "supportedProperty": [
        // "... Properties known to be supported by the class ..."
        {
            "@type": "SupportedProperty",
            "property": "#property", // "The property"
            "required": true, // "Is the property required in a request to be valid?"
            "readable": false, // "Can the client retrieve the property's value?"
            "writable": true // "Can the client change the property's value?"
        }
    ]
}
</pre>
</div>

All instances of a specific class typically support the same operations.
Hydra therefore features a [=supportedOperation=] property which defines
the operations supported by all instances of a class.

<div class="example" heading="Defining a class and documenting its supported operations">
<pre highlight="json-ld" line-highlight="4,10-12">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/doc/#Comment",
    "@type": "Class",
    "title": "The name of the class",
    "description": "A short description of the class.",
    "supportedProperty": [
        // "... Properties known to be supported by the class ..."
    ],
    "supportedOperation": [
        // "... Operations known to be supported by instances of the class ..."
    ]
}
</pre>
</div>

The same feature can be used to describe the operations supported
by values of a [=Link=] property. This is often helpful when
certain operations depend on the permissions of the current user. It
makes it, e.g., possible to show a "delete" link only if the current
user has the permission to delete the resource. Otherwise, the link
would simply be hidden in the representation.

Example shown below describes the operation's expected and returned
value as a dereferencable resource (an RDF resource of a given class),
but the vocabulary is not limited to only those originating
from RDF and is enabled to other types of resources.
Please note that in case of multiple either returned or expected types
provided, client SHOULD assume the set includes any of the types,
but not limited to those types and client SHOULD interpret a received
payload at runtime for possible discrepancies.

<div class="example" heading="Documenting the supported operations of link properties">
<pre highlight="json-ld" line-highlight="4,7-18">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/doc/#comments",
    "@type": "Link",
    "title": "Comments",
    "description": "A link to comments with an operation to create a new comment.",
    "supportedOperation": [
        {
            "@type": "Operation",
            "title": "Creates a new comment",
            "method": "POST",
            "expects": "http://api.example.com/doc/#Comment",
            "returns": "http://api.example.com/doc/#Comment",
            "possibleStatus": [
                // "... Statuses that should be expected and handled properly ..."
            ]
        }
    ]
}
</pre>
</div>

Note: It is worth to mention that Hydra comes with a notion
of a dereferenceability promise, which means that resources marked
with a [=Resource=] class can be safely dereferenced by a client.
Unfortunately, the way how the Word Wide Web works it is impossible to
guarantee that the resource finally will be obtained.

In addition to [=expects|expected=]/[=returns|returned=] resources,
it is also possible to express similar features for headers with
[=returnsHeader=] and [=expectsHeader=] predicates which provides
a simple set of header names. Client SHOULD apply respective header
semantics when creating or receiving a request natural for the protocol in use.

<div class="example" heading="Making a use of a returned header">
<pre highlight="json-ld" line-highlight="11-16">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/doc/#comments",
    "@type": "Link",
    "supportedOperation": [
        {
            "@type": "Operation",
            "method": "POST",
            "expects": "http://api.example.com/doc/#Comment",
            "returns": "http://api.example.com/doc/#Comment",
            "returnsHeader": [
                "Content-Type",
                "Content-Length"],
            "expectsHeader": [
                "Authorization"
            ]
        }
    ]
}
</pre>
</div>

The example above enable an HTTP client to prepare a proper cross-site
pre-flight request, so the server exposes enlisted headers for the client.
The client is also aware of the user authentication requirement necessary
for the operation invocation.

For more complex scenarios it is also possible to expand selected header
specification with both name and possible values, i.e. when defining
expected *Content-Type* values of resources that can be uploaded.
In case multiple possible values are provided, client SHOULD assume
that the set includes any of the values, but not limited to those values.
In order to change that default behavior it is possible to use [=closedSet=]
predicate on the header specification indicating that the set of provided
values is, well, closed and no other values are available. In both cases
the client SHOULD interpret a received payload at runtime for possible
discrepancies.

<div class="example" heading="Making a use of a expected header values">
<pre highlight="json-ld" line-highlight="11-24">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/doc/#comments",
    "@type": "Link",
    "supportedOperation": [
        {
            "@type": "Operation",
            "method": "POST",
            "expects": "http://api.example.com/doc/#Upload",
            "returns": "http://api.example.com/doc/#Comment",
            "returnsHeader": [
                {
                    "headerName": "Content-Type",
                    "possibleValue": ["text/turtle", "application/ld+json"]
                }
                "Content-Length"
            ],
            "expectsHeader": [
                "Authorization",
                {
                    "headerName": "Content-Type",
                    "possibleValue": ["image/gif", "image/png"]
                }
            ]
        }
    ]
}
</pre>
</div>

To wrap up everything altogether, it is also possible to attach atomic
operations supported by, well, supported property itself. This might
come in handy for scenarios, when resource can be partially modified.
It can be achieved with two approaches, both having advantages and
disadvantages.

First approach would involve adding a [=supportedOperation=] to the
intermediate structure of [=SupportedProperty=].
This way prevents from leaking API specific features from the API itself
to i.e. externally defined properties. Data aggregators won't assume that
each instance with a given property could have such an operation.

Another approach would require the API to elevate a specific property
to [=Link=], which can accept a [=supportedOperation=]. This
is more intuitive in APIs operating with internally used vocabularies
where assumption that every instance with that very specific property
has the operation attached available.

Direct usage of [=supportedOperation=] on *rdf:Property*
without elevating it to the [=Link=] SHOULD NOT be implemented as clients
may not discover such a construct correctly.

Note: These are the simple example scenarios and possible usages are not
limited to those described above.

Due to the fact an [=ApiDocumentation=] as all other resources may fail
at runtime, it is important to take countermeasures. A simple strategy
to try to recover from such a situation would be to reload
the [=ApiDocumentation=] and redo all pre-computations that were
based on the [=ApiDocumentation=] (or at least those that lead
to the current failure). Another, simpler approach would require
an application to show an error message with option to return
to a previous or home screen.

Hydra also allows enriching both [=ApiDocumentation=] and
hypermedia controls with human-readable descriptions by applying
[=title=] and [=description=] (as shown in the examples above).
The former states a name of such a decorated element that could
be displayed as a label. The latter provides its description
to be presented i.e. as a hint.

Aforementioned [=title=] and [=description=] SHOULD take precedence
over standard *rdfs:label* and *rdfs:comment*.

There is one more feature related to how Linked Data works. Consider the
example below written in turtle syntax:

<div class="example" heading="RDF as a graph">
<xmp highlight="turtle">
# An example API documentation itself with all the standard bits
@base <http://some.app/> .
@prefix api: <http://some.api/> .
@prefix ex: <http://ontology.example/> .
@prefix hydra: <http://www.w3.org/ns/hydra/core> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
<api>
  a hydra:ApiDocumentation ;
  hydra:supportedClass api:ClassOne, api:ClassTwo .

# Anything else
ex:SomeType a rdfs:Class .
</xmp>
</div>

...and how it could be transformed with JSON-LD framing process:

<div class="example" heading="RDF as a graph continued">
<pre highlight="json-ld">
{
    "@context": { ... },
    "@graph": [
        {
            "@id": "http://some.app/api",
            "@type": "hydra:ApiDocumentation",
            "hydra:supportedClass": [
                {
                    "@id": "api:ClassTwo"
                },
                {
                    "@id": "api:ClassOne"
                }
            ]
        }
    ]
}
</pre>
</div>

As you can see, additional details about *ex:SomeType* went
missing, while this shouldn't happen. The fact that the IRI mentioned
is an *rdfs:Class* may be meaningful for a correct interpretation
of the received payload and this is a sole reason of why a Client
SHOULD NOT disregard other parts of the payload that are not directly
related to the API documentation or other hypermedia controls.

## Discovering a Hydra-powered Web API ## {#discovering}

The first step when trying to access a Web API is to find an entry
point. Typically, this is done by looking for a documentation on the
API publisher's homepage. Hydra enables the API's main entry point
to be discovered automatically if the API publisher marks his
responses with a special HTTP Link Header as defined in [[!RFC8288]].
A Hydra client would look for a Link Header with a relation type
`http://www.w3.org/ns/hydra/core#apiDocumentation` (this is
the IRI identifying the [=apiDocumentation=] property).

In the following example, a Hydra client simply accesses the
homepage of an API publisher (`http://www.example.com/`)
to find the entry point of its API. A client may use an HTTP GET or
HEAD request. The difference between the two is that the former may
return a message-body in the response whereas the latter will not;
otherwise they are identical.

<div class="example" heading="Discovering Hydra API documentation documents">
<pre highlight="http" line-numbers>
HEAD / HTTP/1.1
Host: www.example.com
</pre>
<xmp highlight="http" line-highlight="4">
HTTP/1.1 200 OK
...
Content-Type: text/html; charset=utf-8
Link: <http://api.example.com/doc/>; rel="http://www.w3.org/ns/hydra/core#apiDocumentation"
</xmp>
</div>

The response in the example above contains an HTTP Link Header
pointing to `http://api.example.com/doc/`. Retrieving that resource,
the client would obtain a [=ApiDocumentation|Hydra API documentation=]
defining the API's main entry point:

<div class="example" heading="Retrieving a Hydra API documentation to obtain the main entry point">
<pre highlight="http" line-numbers>
GET /doc/ HTTP/1.1
Host: api.example.com
Accept: application/ld+json
</pre>
<pre highlight="http" line-highlight="9">
HTTP/1.1 200 OK
...
Content-Type: application/ld+json

{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/doc/",
    "title": "The example.com API",
    "entrypoint": "http://api.example.com/",
    ...
}
</pre>
</div>

Note: Please note that in some cases the entry point will already be
known to the client. Thus, the discovery of the API documentation
using HTTP Link Headers may not be necessary as the concepts
used in responses from the API will dereference to their documentation.

In another scenario the [=ApiDocumentation=] would be discovered from
a bookmarked resource's representation.
The [=ApiDocumentation|API implementation=] SHOULD emit the HTTP [=Link=]
header on every API response, making the [=ApiDocumentation=] (and entry
points it defined) discoverable all the time.

<div class="example" heading="Retrieving a Hydra API documentation from another API response">
<pre highlight="http" line-numbers>
GET /api/items HTTP/1.1
Host: api.example.com
Accept: application/ld+json
</pre>
<xmp highlight="http" line-highlight="4">
HTTP/1.1 200 OK
...
Content-Type: application/ld+json
Link: <http://api.example.com/doc/>; rel="http://www.w3.org/ns/hydra/core#apiDocumentation"

{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/items",
    "title": "Items collection",
    ...
}
</xmp>
</div>

## Api versions ## {#api-versions}

It is common to provide a separate API address after a breaking changes
update. This prevents current clients not to get broken as these may not
support these changes.

With hypermedia provided in each response payload, it may be unnecessary
to provide such an alternative API. This is due to fact the client follows
what the server provides and with proper margin for errors implemented
within that client, even breaking changes can be published on the fly.

Still, Hydra does neither have any special support for API versions, nor
prevents them. It's fully an implementers decision on if and how
to provide the API features.

Advanced Concepts {#advanced-concepts}
=================

## Collections ## {#collections}

In many situations, it makes sense to expose resources that reference
a set of somehow related resources. Results of a search query or
entries of an address book are just two examples. To simplify such
use cases, Hydra defines the two classes [=Collection=] and
[=PartialCollectionView=].

A [=Collection=] can be used to reference a set of resources
as follows:

<div class="example" heading="Referencing related resources using a Hydra Collection">
<pre highlight="json-ld" line-highlight="4-6">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/an-issue/comments",
    "@type": "Collection",
    "totalItems": 4980,
    "member" : [
        {
            "@id": "/comments/429"
        },
        {
            "@id": "/comments/781",
            "title": "Properties may be embedded directly in the collection"
        },
        ...
    ]
}
</pre>
</div>

As shown in the example above, member items can either consist of
solely a link or also include some properties. In some cases embedding
member properties directly in the collection is beneficial as it may
reduce the number of HTTP requests necessary to get enough information
to process the result.

Since collections may become very large, Web APIs often chose to
split a collection into multiple pages. In Hydra, that can be achieved
with a [=PartialCollectionView=]. It describes a specific
view on the collection which represents only a subset of the collection's
members. A [=PartialCollectionView=] may contain links to the
[=first=], [=next=], [=previous=], and [=last=]
[=PartialCollectionView=] which allows a client to find all members
of a [=Collection=].

<div class="example" heading="A Hydra PartialCollectionView splits a collection into multiple views">
<pre highlight="json-ld" line-highlight="9,11-16">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/an-issue/comments",
    "@type": "Collection",
    "totalItems": 4980,
    "member": [
        // "... a subset of the members of the Collection ..."
    ],
    "view": {
        "@id": "http://api.example.com/an-issue/comments?page=3",
        "@type": "PartialCollectionView",
        "first": "/an-issue/comments?page=1",
        "previous": "/an-issue/comments?page=2",
        "next": "/an-issue/comments?page=4",
        "last": "/an-issue/comments?page=498"
    }
}
</pre>
</div>

Note: It is worth to mention that all those links are optional,
and it is up to server whether to provide these links or not.

## Member assertions ## {#member-assertions}

A [=memberAssertion=] (formerly `manages`) is a way to declare additional,
implicit statements about members of a [[#collections|collection]].
Statements which may otherwise be missing from the respective member
resources inlined in a collection's representation.

<div class="example" heading="Member assertion describes relation with another resource">
<pre highlight="json-ld" line-highlight="5-8">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/an-issue/comments",
    "@type": "Collection",
    "memberAssertion": {
        "subject": "http://api.example.com/an-issue",
        "property": "http://api.example.com/vocab#comment"
    },
    "member": [
        {
            "@id": "/comments/429"
        }
    ]
}
</pre>
</div>

In the above example, adding a `memberAssertion` node to the collection
instructs the client that every member of this collection is linked
to the `subject` by the `property`. It could be written as a SPARQL
triple pattern below, where `?m` would be substituted by each member
of the collection.

<xmp highlight="sparql">
    <http://api.example.com/an-issue> <http://api.example.com/vocab#comment> ?m
</xmp>

A [=memberAssertion=] MUST use two and only two of the [=subject=],
[=property=] and [=object=] predicates. The [=memberAssertion=] predicate
MAY have more than one such blocks, each expressing different relations
between the collection members and other resources.

Note: It's important to point out that the [=subject=], [=property=]
and [=object=] predicates are defined within the Hydra namespace
and are not [[!RDF-Schema|rdfs]] terms.

It is also possible to use [=memberAssertion=] predicate on the
API documentation level, by attaching this predicate to subclasses
of the [=Collection=], like in the example below. Clients would
understand that all members of collections which are instances
of `api:UserCollections` would in fact have `rdf:type api:User`.

<div class="example" heading="Member assertion block describes strongly typed collection">
<pre highlight="json-ld" line-highlight="11-14">
{
    "@context": [
        "http://www.w3.org/ns/hydra/context.jsonld",
        { "api": "http://api.example.com/api/documentation#" }
    ],
    "@id": "http://api.example.com/api/documentation",
    "@type": "ApiDocumentation",
    "supportedClass": ["api:User", "api:UserCollection"],
    "api:UserCollection": {
        "subClassOf": "Collection",
        "memberAssertion": {
            "property": "rdf:type",
            "object": "api:User"
        },
    }
}
</pre>
</div>

It is worth to mention that a strongly typed collection instance can have
its own member assertions. In such a scenario, both
[=ApiDocumentation|API documentation=] level and instance
level assertions should be combined as neither makes the other obsolete.

More complex scenario would involve a class hierarchy, in which each class
can carry additional member assertions compared to it's base class.
To discover all available member assertion blocks client SHOULD traverse
whole class hierarchy to gather all the member assertions. In order
to take such a burden from clients it is strongly recommended providing
all member assertion blocks to be provided on each class level including
its base class blocks, so the client does not have to perform
this traversing behavior.

## Templated Links ## {#templated-links}

Sometimes, it is impossible for a server to construct a URL because
the URL depends on information only known by the client. A typical
use case are URLs which enable a client to query the server. In such
a case, the server cannot construct the URL because it does not know
the query the client is interested in. What the server can do however,
is to give the client a template to construct such a URL at runtime.
In Hydra, the [=IriTemplate=] class is used to do so.

An [=IriTemplate=] consists of a [=template=] literal and a set
of [=mappings=]. Each [=IriTemplateMapping=] maps a
[=variable=] used in the template to a [=property=] and may
optionally specify whether that variable is [=required=] or not.
The syntax of the template literal is specified by its datatype and
defaults to the [[!RFC6570]] URI Template syntax, which can be
explicitly indicated by [=Rfc6570Template=].

<div class="example" heading="Description of an IRI Template">
<pre highlight="json-ld" line-highlight="3-13">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@type": "IriTemplate",
    "template": "http://api.example.com/issues{?q}",
    "variableRepresentation": "hydra:BasicRepresentation",
    "mapping": [
        {
            "@type": "IriTemplateMapping",
            "variable": "q",
            "property": "hydra:freetextQuery",
            "required": true
        }
    ]
}
</pre>
</div>

The example above maps the variable `q` to Hydra's [=freetextQuery=]
property and marks it as required. As its name suggests,
the [=freetextQuery=] property can be used for free text queries.

A template syntax only details how to fill out simple string values,
but not how to derive such string values from typed values,
language-tagged strings, or IRIs. Hydra addresses this by
specifying how such values are to be serialized as strings. The
serialization of an [=IriTemplate's=] variables can be described
by setting the [=variableRepresentation=] property to
[=BasicRepresentation=] or [=ExplicitRepresentation=]. The
[=BasicRepresentation=] represents values by their lexical form. It
omits type and language information and does not differentiate between
IRIs and literals. The [=ExplicitRepresentation=], on the other
hand, includes type and language information and differentiates
between IRIs and literals by serializing values as follows:

- IRIs are represented as-is
- literals, i.e., (typed) values and language-tagged strings are
    represented by their lexical form, surrounded by a single pair of
    doubles quotes (`"`)
- if a literal has a language, a single `@` symbol is
    appended after the double-quoted lexical form, followed by a
    non-empty [[!BCP47]] language code
- if a literal has a type, two *caret* symbols (`^^`) are appended
    after the double-quoted literal, followed by the full datatype IRI

In both representations characters MUST NOT be escaped. In case the
representation format is not explicitly described, clients SHOULD
use the [=BasicRepresentation=] by default.

<p class="warning" role="warning">
<span>Warning:</span> Although [=ExplicitRepresentation=]
use of `@` and `^^` is similar, it is *not* the same as the
[[!Turtle]] representation for literals. Turtle literals require escaping
of special characters, surround datatype IRIs with angular brackets
(&lt; and &gt;), and also allow single quotes (`'`) to indicate literals.
The [=ExplicitRepresentation=] values must not be escaped,
IRIs must not be surrounded by any character, and only double quotes
can indicate literals.
</p>

Below are some example values serialized in the different
representations as well as the result of expanding the IRI template
`http://example.com/find/{value}` with the respective value.

<aside title="The different variable representations">

: The IRI `http://www.hydra-cg.com/`
:: hydra:BasicRepresentation=] `http://www.hydra-cg.com/`; <br />
    resulting IRI: `http://example.com/find/http%3A%2F%2Fwww.hydra-cg.com%2F`
:: [=ExplicitRepresentation=]: `http://www.hydra-cg.com/`; <br />
    resulting IRI: `http://example.com/find/http%3A%2F%2Fwww.hydra-cg.com%2F`

: The string `A simple string`
:: [=BasicRepresentation=]: `A simple string`; <br />
    resulting IRI: `http://example.com/find/A%20simple%20string`
:: [=ExplicitRepresentation=]: `"A simple string"`; <br />
    resulting IRI: `http://example.com/find/%22A%20simple%20string%22`

: The string `A string " with a quote`
:: [=BasicRepresentation=]: `A string " with a quote`; <br />
    resulting IRI: `http://example.com/find/A%20string%20%22%20with%20a%20quote`
:: [=ExplicitRepresentation=]: `"A string " with a quote"`; <br />
    resulting IRI: `http://example.com/find/%22A%20string%20%22%20with%20a%20quote%22`

: The language-tagged string `A simple string` with language English
:: [=BasicRepresentation=]: `A simple string`; <br />
    resulting IRI: `http://example.com/find/A%20simple%20string`
:: [=ExplicitRepresentation=]: `"A simple string"@en`; <br />
    resulting IRI: `http://example.com/find/%22A%20simple%20string%22%40en`

: The decimal value `5.5`
:: [=BasicRepresentation=]: `5.5`; <br />
    resulting IRI: `http://example.com/find/5.5`
:: [=ExplicitRepresentation=]: `"5.5"^^http://www.w3.org/2001/XMLSchema#decimal`; <br />
    resulting IRI: `http://example.com/find/%225.5%22%5E%5Ehttp%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23decimal`

</aside>

Similar to how Hydra's [=Link=] class allows the definition of
properties that represent hyperlinks as described in
[[#adding-affordances-to-representations]], the [=TemplatedLink=] class
allows the definition of properties whose value are IRI templates.
Hydra predefines one such property, namely the [=search=] property which
can be used to document available search interfaces.

<div class="example" heading="The definition of Hydra's search property (extract)">
<pre highlight="json-ld" line-highlight="3-4">
    {
        "@context": "http://www.w3.org/ns/hydra/context.jsonld",
        "@id": "hydra:search",
        "@type": "hydra:TemplatedLink"
    }
</pre>
</div>

IRI expansion should be performed with respect to the specification
behind the IRI template type ([[!RFC6570]] by default), and the product
of this process SHOULD be an IRI. When the produced IRI is relative,
the client SHOULD stick to [[!RFC3986]] sections 5.1.3 and 5.1.4
to be compatible with most RDF serializations that support relative IRIs.
Still, it may be preferred to use another base URI for the expansion
process, which makes the [=resolveRelativeUsing=] term useful. It allows
to switch the IRI template expansion algorithm, so the base URI
is established using current link context, which is a subject
of the relation pointing to an [=IriTemplate=] instance. In case
that subject is a relative URI, default behavior SHOULD be used as fallback.

The example below allows to make the product of an IRI template
expansion relative to the `http://api.example.com/an-issue/` resource
by using it as its base URI, which further enables the `some:operation`
to be moved to i.e. [=ApiDocumentation|API documentation=] level rather
to inline it.

<div class="example" heading="Custom base Uri resolution for an Iri template">
<pre highlight="json-ld">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/an-issue/",
    "@type": "Collection",
    "some:operation": {
        "@type": "IriTemplate",
        "template": "{id}",
        "resolveRelativeUsing": "LinkContext",
        "variable": "id",
        "mapping": {...}
    }
}
</pre>
</div>

When constructed, the IRI would effectively become similar
to `http://api.example.com/an-issue/1234`, with the relative part
`{id}` appended to the link context URL.

## IRI template operations ## {#iri-template-operations}

There are circumstances in which client would like to perform an operation
not knowing the final IRI of the resource to be called. This case
is especially in force when working with collections - client may want
to add a new collection member, or it may need to provide more details
while searching with other protocol's method (i.e. POST instead of GET
in case of an HTTP).

This is achievable by attaching a [=supportedOperation=] to the property
that connects a subject of that relation with its [=IriTemplate=]
as described in the previous part of this document. Please note that
client is still allowed to use the defined link and custom operation's
method is optional.

<div class="example" heading="Operation with IRI template">
<pre highlight="json-ld" line-highlight="5-12">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api-documentation",
    "@type": "ApiDocumentation",
    "api:search": {
        "@type": "Link",
        "rdfs:subClassOf": "search",
        "supportedOperation": {
            "@type": "SupportedOperation",
            "method": "POST"
        }
    }
}
</pre>
<pre highlight="json-ld" line-highlight="5-9">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/issues",
    "@type": "Collection",
    "api:search": {
        "@type": "IriTemplate",
        "template": "/issues?search={name}",
        "mapping": { ... }
    }
}
</pre>
</div>

The example above allows client to either invoke an HTTP GET or POST
call on `http://api.example.com/issues?search=search_string` resource.

<div class="example" heading="Operation with IRI template without link option">
<pre highlight="json-ld" line-highlight="5-10">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api-documentation",
    "@type": "ApiDocumentation",
    "api:find": {
        "supportedOperation": {
            "@type": "SupportedOperation",
            "method": "POST"
        }
    }
}
</pre>
<pre highlight="json-ld" line-highlight="5-9">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/issues",
    "@type": "Collection",
    "api:search": {
        "@type": "IriTemplate",
        "template": "/issues?find={name}",
        "mapping": {...}
    }
}
</pre>
</div>

The example above allows client to invoke only an HTTP POST
call on `http://api.example.com/issues?find=search_string` resource as
the described relation of `find` is not a [=Link=].

## Supported property data source ## {#supported-property-data-source}

There are circumstances in which an API would like to inform a client on
when to obtain values to feed data structures with details. Having all the
necessary components like supported property, collection and IRI templates,
it is possible to drive the client and direct it with links and operations
to the data sources.

It is doable by attaching either a [=collection=] or [=search=]
predicate to instance of [=supportedProperty=] or to [=property=].
In such case client SHOULD assume that the relation leads to
the collection of values compatible with the supported property's range
and can be used to feed data structures with the supported property.
It is recommended (but not mandatory) to use [=freetextQuery=]
variable mapping in case of the [=search=] predicate as it has a
well-defined semantics and takes the burden of interpretation from
the client.

While it is possible to provide such links in both
[=ApiDocumentation|API documentation=] and within the received payload,
client SHOULD use the latter link first if applicable.
This is due to the fact the server may want to put additional
context to narrow the collection of viable values. Redefinition does not
make the more general one obsolete though and can be used as a fallback.

<div class="example" heading="Supported property data source">
<pre highlight="json-ld" line-highlight="8-14">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@type": "ApiDocumentation",
    "supportedClass": {
        "@id": "schema:Event",
        "supportedProperty": {
            "property": "schema:actor",
            "search": {
                "template": "/api/user{?search}",
                "mapping": {
                    "variable": "search",
                    "property": "freetextQuery"
                }
            }
        }
    },
    ...
}
</pre>
</div>

The example above instructs a client that every resource of type
`schema:Event` can have a relation of `schema:actor`, the objects
of which the client can obtain using the search link provided.

## Description of HTTP Status Codes and Errors ## {#description-of-errors}

In case of the HTTP protocol, status codes have well-defined semantics
and can be used to signal the outcome of an operation. Unfortunately,
however, HTTP status codes by themselves are often not specific enough,
making it difficult to understand the real cause of an error. For instance,
a `429 Too Many Requests` response is rarely informative enough by itself.
To address this issue, Hydra defines a [=Status=] class which allows
additional information to be associated with the HTTP status code.

<div class="example" heading="Associating additional information to an HTTP status code">
<pre highlight="json-ld" line-highlight="3-4">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@type": "Status",
    "statusCode": 429,
    "title": "Too Many Requests",
    "description": "A maximum of 500 requests per hour and user is allowed.",
    ...
}
</pre>
</div>

An [=ApiDocumentation=] or an [=Operation=] may document the
status codes that might be returned by the server using the
[=possibleStatus=] property as described in [[#documenting-a-web-api]].
This allows a developer to understand what to expect when invoking
an operation. It has, however, not to be considered as an extensive
list of all potentially returned status codes; it is merely a hint.
Developers should expect to encounter other HTTP status codes as well.

A server may also return a [=Status=] directly in a response.
When doing so, it often makes sense to subclass the [=Status=]
to make its semantics more explicit. Hydra defines just one such subclass,
namely the [=Error=] class. This provides an extensible framework
to communicate error details to a client.

Furthermore, a [=Status=] or [=Error=] returned by the server can also
be given an identifier. When dereferenced, the [=Error=] resource
can provide more detailed information or possible ways to resolve
the problem, if applicable.

Finally, the server SHOULD provide error descriptions using an [[!RFC7807]]
standard by using an `application/problem+json` response. When doing so,
the server also MUST provide an additional header pointing to either
the built-in Hydra `http://www.w3.org/ns/hydra/error` context
or any JSON-LD context that maps the terms `type`, `title`, `detail`,
`status` and `instance` the same way as the standard one.

<div class="example" heading="RFC-7807 compatible error description">
<xmp highlight="http">
HTTP/1.1 400 Bad Request
Content-Type: application/problem+json
Link: <http://www.w3.org/ns/hydra/error>; rel="http://www.w3.org/ns/json-ld#context"

{
    "type": "https://example.com/probs/out-of-credit",
    "@type": "http://www.w3.org/ns/hydra/core#Error",
    "title": "You do not have enough credit.",
    "detail": "Your current balance is 30, but that costs 50.",
    "instance": "/account/12345/msgs/abc",
    "balance": 30,
    "accounts": [
        "/account/12345",
        "/account/67890"
    ]
}
</xmp>
</div>

While the built-in context makes the response fully compatible with
the mentioned specification, properties not defined in the standard
Hydra's error context won't be visible for Hydra aware processors.
To overcome this, it is possible to declare a custom context pointed
the same way, that would combine standard Hydra's standard error context
and an additional JSON-LD context with either the `@vocab` or custom
property mappings telling the processor on how to interpret those custom
error properties.

Resources provided may have an additional hint pointing to an [=Error=]
type like in the example above, but it is not mandatory to do so as all
resources described with `application/problem+json` are considered
[=Error=].

Note: It is worth to mention that it may happen (i.e. due to proxy behavior)
the value of the [=status=] property will differ to the one received
from the protocol layer.

<div class="example" heading="Non RFC-7807 compliant error description using raw Hydra JSON-LD representation">
<pre highlight="http" line-highlight="6">
HTTP/1.1 400 Bad Request
Content-Type: application/ld+json

{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@type": "Error",
    "@id": "http://api.example.com/error-details/1234",
    "title": "An error occurred",
    "description": "Typically, a specialization of this class is used in practice.",
    ...
}
</pre>
</div>

## Client initiated pagination ## {#pagination}

There are situations when a client would like to provide a specific
collection limitations, i.e. by providing query-language like member
offset and limit, or some specific page index and number of members
per page. This is doable with [=offset=]/[=limit=]
or [=pageIndex=]/[=limit=] predicates.

With those, it is possible to bind a template variables mapped
with externally obtained values (i.e. user interaction) the same way
as with other mappings.

While the predicates enlisted above accepts non-negative integer
numbers, there is also a possibility of providing a custom page
reference expressed via [=pageReference=] predicate. It is possible
to provide a custom page identifier (i.e. a GUID or a letter)
instead of a number.

## Extensions ## {#extensions}

While Hydra Core Vocabulary allows addressing many usage scenarios,
not every aspect of API behavior can be covered. This
applies especially to querying, resource projection or data structure
description. This is due to fact that Hydra is meant to be as light
as possible forcing to drop some features out of its scope.

That is why there is a possibility of hinting a client on what kind
of extensions may be found or used in the received payloads.
After discovering an [=extension=] predicate in the
[=ApiDocumentation|API documentation=], client can assume additional
details are available described with complementary vocabularies.

<div class="example" heading="Hydra client extension usage">
<pre highlight="json-ld" line-highlight="8">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/doc/",
    "@type": "ApiDocumentation",
    "title": "The name of the API",
    "description": "A short description of the API",
    "entrypoint": "URL of the API's main entry point",
    "extension": "http://www.w3.org/ns/shacl#",
    ...
}
</pre>
</div>

It is up to the used vocabulary to define how these additional details
should be interpreted. In case client does not recognize these extensions,
additional details should be ignored and base Hydra interpretation
should be in force.

Server SHOULD NOT use extensions to add statements that are in
contradiction to base Hydra interpretation, so the client is not confused.
Server SHOULD also keep multiple extensions describing adequate
knowledge in line regarding their description (i.e. data structure
descriptions in various vocabularies should not cause differences).

Client can express its preferences through the `Prefer` HTTP header
by pointing the preferred extensions via IRIs as on the example below.
The client SHOULD use the `Prefer` HTTP header [[!RFC7240]] with
the `hydra.extension` preference as an `iri` attribute having
the IRI of the extension as value to hint the server about the extension
it supports. Multiple preferences can be expressed by providing multiple
`Prefer` header values.

<div class="example" heading="Hydra client extension preference">
<pre highlight="http" line-highlight="2">
GET http://api.example.com/api/people HTTP/1.1
Prefer: hydra.extension; iri="http://schema.org/"
</pre>
</div>

Server MUST implement `Prefer` header handling according to
the [[!RFC7240]] and implementers should proceed with caution.

Classes {#classes}
=======

## hydra:ApiDocumentation ## {#class-ApiDocumentation}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:ApiDocumentation">ApiDocumentation</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>The Hydra API documentation class.</td>
    </tr>
    <tr>
        <th>Sub-class of:</th>
        <td>[=Resource=]</td>
    </tr>
</table>
<div class="example" heading="hydra:ApiDescription">
<xmp highlight="json-ld" line-highlight="4">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:BaseUriSource ## {#class-BaseUriSource}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:BaseUriSource">BaseUriSource</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            Provides a base abstract for base Uri source
            for Iri template resolution.
        </td>
    </tr>
    <tr>
        <th>Sub-class of:</th>
        <td>[=Resource=]</td>
    </tr>
    <tr>
        <th>Named instances:</th>
        <td>[=Rfc3986=], [=LinkContext=]</td>
    </tr>
</table>

## hydra:Class ## {#class-Class}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:Class">Class</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>The class of Hydra classes.</td>
    </tr>
    <tr>
        <th>Sub-class of:</th>
        <td>`rdfs:Class`</td>
    </tr>
</table>

## hydra:Collection ## {#class-Collection}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:Collection">Collection</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            A collection holding references to a number of related resources.
        </td>
    </tr>
    <tr>
        <th>Sub-class of:</th>
        <td>[=Resource=]</td>
    </tr>
</table>
<div class="example" heading="hydra:Collection">
<xmp highlight="json-ld" line-highlight="4">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:Error ## {#class-Error}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:Error">Error</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            A runtime error, used to report information beyond the returned
            status code.
        </td>
    </tr>
    <tr>
        <th>Sub-class of:</th>
        <td>[=Status=]</td>
    </tr>
</table>
<div class="example" heading="hydra:Error">
<xmp highlight="http" line-highlight="7">
HTTP/1.1 400 Bad request
Content-Type: application/problem+json
Link: <http://www.w3.org/ns/hydra/error>; rel="http://www.w3.org/ns/json-ld#context"

{
"type": "https://api.example.com/vocab#NullReferenceException",
"@type": "http://www.w3.org/ns/hydra/core#Error",
"title": "The request cannot be processed.",
"detail": "Provided value cannot be 'null'.",
"instance": "http://api.example.com/api/posts",
"status": 404
}
</xmp>
</div>

## hydra:HeaderSpecification ## {#class-HeaderSpecification}
<table class="def">
    <tr>
        <th>Name:</th>
        <td>
            <dfn export id="hydra:HeaderSpecification">HeaderSpecification</dfn>
        </td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>Specifies a possible either expected or returned header values.</td>
    </tr>
    <tr>
        <th>Sub-class of:</th>
        <td>[=Resource=]</td>
    </tr>
</table>
<div class="example" heading="hydra:HeaderSpecification">
<xmp highlight="json-ld" line-highlight="21,31">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "@type": "hydra:HeaderSpecification",
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "@type": "hydra:HeaderSpecification",
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:IriTemplate ## {#class-IriTemplate}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:IriTemplate">IriTemplate</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>The class of IRI templates.</td>
    </tr>
</table>
<div class="example" heading="hydra:IriTemplate">
<xmp highlight="json-ld" line-highlight="28">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "@type": "hydra:IriTemplate",
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:IriTemplateMapping ## {#class-IriTemplateMapping}
<table class="def">
    <tr>
        <th>Name:</th>
        <td>
            <dfn export id="hydra:IriTemplateMapping">IriTemplateMapping</dfn>
        </td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>A mapping from an IRI template variable to a property.</td>
    </tr>
</table>
<div class="example" heading="hydra:IriTemplateMapping">
<xmp highlight="json-ld" line-highlight="33,40,47">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "@type": "hydra:IriTemplate",
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "@type": "hydra:IriTemplateMapping",
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "@type": "hydra:IriTemplateMapping",
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "@type": "hydra:IriTemplateMapping",
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:Link ## {#class-Link}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:Link">Link</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>The class of properties representing links.</td>
    </tr>
    <tr>
        <th>Sub-class of:</th>
        <td>[=Resource=], `rdf:Property`</td>
    </tr>
</table>
<div class="example" heading="hydra:Link">
<xmp highlight="json-ld" line-highlight="11">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@graph": [
        {
            "@id": "http://api.example.com/api?documentation",
            "@type": "ApiDocumentation",
            "entrypoint": "http://api.example.com/api"
        },
        {
            "@id": "http://api.example.com/vocab#comments",
            "@type": "hydra:Link"
        }
    }
}
</xmp>
</div>

## hydra:Operation ## {#class-Operation}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:Operation">Operation</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>An operation.</td>
    </tr>
</table>
<div class="example" heading="hydra:Operation">
<xmp highlight="json-ld" line-highlight="6">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts/1",
    "operation": [
        {
            "@type": "Operation",
            "method": "DELETE",
            "title": "Remove",
            "description": "Removes post no. 1"
        }
    ]
}
</xmp>
</div>

## hydra:PartialCollectionView ## {#class-PartialCollectionView}
<table class="def">
    <tr>
        <th>Name:</th>
        <td>
            <dfn export id="hydra:PartialCollectionView">
                PartialCollectionView
            </dfn>
        </td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            A PartialCollectionView describes a partial view of a Collection.
            Multiple PartialCollectionViews can be connected with
            the next/previous properties to allow a client to retrieve
            all members of the collection.
        </td>
    </tr>
    <tr>
        <th>Sub-class of:</th>
        <td>[=Resource=]</td>
    </tr>
</table>
<div class="example" heading="hydra:PartialCollectionView">
<xmp highlight="json-ld" line-highlight="6">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@type": "PartialCollectionView",
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:Resource ## {#class-Resource}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:Resource">Resource</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            The class of dereferenceable resources by means a client
            can attempt to dereference; however, the received responses
            should still be verified.
        </td>
    </tr>
</table>

## hydra:Status ## {#class-Status}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:Status">Status</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            Additional information about a status code that might be returned.
        </td>
    </tr>
</table>
<div class="example" heading="hydra:Status">
<xmp highlight="json-ld" line-highlight="11">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts/1",
    "operation": [
        {
            "method": "DELETE",
            "title": "Remove",
            "description": "Removes post no. 1",
            "possibleStatus": [
                {
                    "@type": "Status",
                    "statusCode": 303
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:SupportedProperty ## {#class-SupportedProperty}
<table class="def">
    <tr>
        <th>Name:</th>
        <td>
            <dfn export id="hydra:SupportedProperty">SupportedProperty</dfn>
        </td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>A property known to be supported by a Hydra class.</td>
    </tr>
</table>
<div class="example" heading="hydra:SupportedProperty">
<xmp highlight="json-ld" line-highlight="39">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "@type": "SupportedProperty",
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:TemplatedLink ## {#class-TemplatedLink}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:TemplatedLink">TemplatedLink</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>A templated link.</td>
    </tr>
    <tr>
        <th>Sub-class of:</th>
        <td>[=Resource=], `rdf:Property`</td>
    </tr>
</table>
<div class="example" heading="hydra:TemplatedLink">
<xmp highlight="json-ld" line-highlight="11">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@graph": [
        {
            "@id": "http://api.example.com/api?documentation",
            "@type": "ApiDocumentation",
            "entrypoint": "http://api.example.com/api"
        },
        {
            "@id": "http://api.example.com/vocab#comments",
            "@type": "hydra:TemplatedLink"
        }
    }
}
</xmp>
</div>

## hydra:VariableRepresentation ## {#class-VariableRepresentation}
<table class="def">
    <tr>
        <th>Name:</th>
        <td>
            <dfn export id="hydra:VariableRepresentation">
                VariableRepresentation
            </dfn>
        </td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            A representation specifies how to serialize variable
            values into strings.
        </td>
    </tr>
    <tr>
        <th>Named instances:</th>
        <td>[=BasicRepresentation=], [=ExplicitRepresentation=]</td>
    </tr>
</table>

Properties {#properties}
==========

## hydra:apiDocumentation ## {#property-apiDocumentation}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:apiDocumentation">apiDocumentation&lrm;</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>A link to the API documentation.</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=Resource=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>[=ApiDocumentation=]</td>
    </tr>
</table>
<div class="example" heading="hydra:apiDocumentation">
<xmp highlight="http" line-highlight="3">
HTTP/1.1 200 OK
Content-Type: text/html; charset=utf-8
Link: <http://api.example.com/doc/>; rel="http://www.w3.org/ns/hydra/core#apiDocumentation"
</xmp>
</div>

## hydra:closedSet ## {#property-closedSet}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:closedSet">closedSet</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            Determines whether the provided set of header values
            is closed or not.
        </td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=HeaderSpecification=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>`xsd:boolean`</td>
    </tr>
</table>
<div class="example" heading="hydra:closedSet">
<xmp highlight="json-ld" line-highlight="23,32">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:collection ## {#property-collection}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:collection">collection&lrm;</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>Collections somehow related to this resource.</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>[=Collection=]</td>
    </tr>
</table>
<div class="example" heading="hydra:collection">
<xmp highlight="json-ld" line-highlight="4">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api",
    "collection": [
        {
            "@id": "http://api.example.com/api/posts",
            "@type": "Collection",
            "memberAssertion": [
                {
                    "property": "rdf:type",
                    "object": "http://api.example.com/vocab#Post"
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:description ## {#property-description}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:description">description</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>A description.</td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Domain includes:</th>
        <td>
            [=ApiDocumentation=],
            [=Status=],
            [=Class=],
            [=SupportedProperty=],
            [=Operation=],
            [=Link=],
            [=TemplatedLink=]
        </td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>`xsd:string`</td>
    </tr>
</table>
<div class="example" heading="hydra:description">
<xmp highlight="json-ld" line-highlight="11,16">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:entrypoint ## {#property-entrypoint}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:entrypoint">entrypoint</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>A link to main entry point of the Web API.</td>
    </tr>
    <tr>
        <th>Min cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=ApiDocumentation=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>[=Resource=]</td>
    </tr>
</table>
<div class="example" heading="hydra:entrypoint">
<xmp highlight="json-ld" line-highlight="5">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:expects ## {#property-expects}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:expects">expects</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>The information expected by the Web API.</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=Operation=]</td>
    </tr>
    <tr>
        <th>Range includes:</th>
        <td>
            `rdfs:Resource`,
            [=Resource=],
            `rdfs:Class`,
            [=Class=]
        </td>
    </tr>
</table>
<div class="example" heading="hydra:expects">
<xmp highlight="json-ld" line-highlight="17">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:expectsHeader ## {#property-expectsHeader}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:expectsHeader">expectsHeader</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>Specification of the header expected by the operation.</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=Operation=]</td>
    </tr>
    <tr>
        <th>Range includes:</th>
        <td>
            `xsd:string`,
            [=HeaderSpecification=]
        </td>
    </tr>
</table>
<div class="example" heading="hydra:expectsHeader">
<xmp highlight="json-ld" line-highlight="27">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:extension ## {#property-extension}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:extension">extension</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>Hint on what kind of extensions are in use.</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=ApiDocumentation=]</td>
    </tr>
</table>
<div class="example" heading="hydra:extension">
<xmp highlight="json-ld" line-highlight="6">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:first ## {#property-first}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:first">first</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>The first resource of an interlinked set of resources.</td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=Resource=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>[=Resource=]</td>
    </tr>
</table>
<div class="example" heading="hydra:first">
<xmp highlight="json-ld" line-highlight="8">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:freetextQuery ## {#property-freetextQuery}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:freetextQuery">freetextQuery</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>A property representing a freetext query.</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=Resource=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>`xsd:string`</td>
    </tr>
</table>
<div class="example" heading="hydra:freetextQuery">
<xmp highlight="json-ld" line-highlight="33">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:headerName ## {#property-headerName}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:headerName">headerName</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>Name of the header.</td>
    </tr>
    <tr>
        <th>Min cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=HeaderSpecification=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>`xsd:string`</td>
    </tr>
</table>
<div class="example" heading="hydra:headerName">
<xmp highlight="json-ld" line-highlight="21,30">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:last ## {#property-last}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:last">last</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>The last resource of an interlinked set of resources.</td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=Resource=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>[=Resource=]</td>
    </tr>
</table>
<div class="example" heading="hydra:last">
<xmp highlight="json-ld" line-highlight="9">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:limit ## {#property-limit}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:limit">limit</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>Instructs to limit set only to N elements.</td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>`xsd:nonNegativeInteger`</td>
    </tr>
</table>
<div class="example" heading="hydra:limit">
<xmp highlight="json-ld" line-highlight="39">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:mapping ## {#property-mapping}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:mapping">mapping</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>A variable-to-property mapping of the IRI template.</td>
    </tr>
    <tr>
        <th>Min cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=IriTemplate=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>[=IriTemplateMapping=]</td>
    </tr>
</table>
<div class="example" heading="hydra:mapping">
<xmp highlight="json-ld" line-highlight="30">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:member ## {#property-member}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:member">member</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>A member of the collection.</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=Collection=]</td>
    </tr>
</table>
<div class="example" heading="hydra:member">
<xmp highlight="json-ld" line-highlight="15">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:memberAssertion ## {#property-memberAssertion}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:memberAssertion">memberAssertion</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>Semantics of each member provided by the collection.</td>
    </tr>
    <tr>
        <th>Domain includes:</th>
        <td>[=Collection=], [=Class=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td></td>
    </tr>
</table>
<div class="example" heading="hydra:memberAssertion in context of strongly typed collections">
<xmp highlight="json-ld" line-highlight="8">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api",
    "collection": [
        {
            "@id": "http://api.example.com/api/posts",
            "@type": "Collection",
            "memberAssertion": [
                {
                    "property": "rdf:type",
                    "object": "http://api.example.com/vocab#Post"
                }
            ]
        }
    ]
}
</xmp>
</div>
<div class="example" heading="hydra:memberAssertion in context of building relation to another resource">
<xmp highlight="json-ld" line-highlight="5">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts/1/comments",
    "@type": "Collection",
    "memberAssertion": [
        {
            "subject": "http://api.example.com/api/posts/1",
            "property": "http://api.example.com/vocab#comment"
        }
    ]
}
</xmp>
</div>
<div class="example" heading="hydra:memberAssertion in context of hydra:ApiDocumentation">
<xmp highlight="json-ld" line-highlight="17">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@graph": [
        {
            "@id": "http://api.example.com/api?documentation",
            "@type": "ApiDocumentation",
            "entrypoint": "http://api.example.com/api"
        },
        {
            "@id": "http://api.example.com/vocab#comments",
            "@type": "hydra:Link",
            "supportedOperation": [
                {
                    "method": "GET",
                    "returns": {
                        "subClassOf": "hydra:Collection",
                        "memberAssertion": {
                            "property": "rdf:type",
                            "object": "http://api.example.com/vocab#Comment"
                        }
                    }
                }
            ]
        }
    }
}
</xmp>
</div>

## hydra:method ## {#property-method}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:method">method</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>The protocol method.</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=Operation=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>`xsd:string`</td>
    </tr>
</table>
<div class="example" heading="hydra:method">
<xmp highlight="json-ld" line-highlight="14">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:next ## {#property-next}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:next">next</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            The resource following the current instance
            in an interlinked set of resources.
        </td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=Resource=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>[=Resource=]</td>
    </tr>
</table>
<div class="example" heading="hydra:next">
<xmp highlight="json-ld" line-highlight="11">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:object ## {#property-object}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:object">object</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>The object.</td>
    </tr>
    <tr>
        <th>Min cardinality:</th>
        <td>1</td>
    </tr>
</table>
<div class="example" heading="hydra:object">
<xmp highlight="json-ld" line-highlight="11">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api",
    "collection": [
        {
            "@id": "http://api.example.com/api/posts",
            "@type": "Collection",
            "memberAssertion": [
                {
                    "property": "rdf:type",
                    "object": "http://api.example.com/vocab#Post"
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:offset ## {#property-offset}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:offset">offset</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>Instructs to skip N elements of the set.</td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>`xsd:nonNegativeInteger`</td>
    </tr>
</table>
<div class="example" heading="hydra:offset">
<xmp highlight="json-ld" line-highlight="45">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:operation ## {#property-operation}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:operation">operation&lrm;</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>An operation supported by the Hydra resource.</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=Resource=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>[=Operation=]</td>
    </tr>
</table>
<div class="example" heading="hydra:operation">
<xmp highlight="json-ld" line-highlight="4">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts/1",
    "operation": [
        {
            "method": "DELETE",
            "title": "Remove",
            "description": "Removes post no. 1"
        }
    ]
}
</xmp>
</div>

## hydra:pageIndex ## {#property-pageIndex}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:pageIndex">pageIndex</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            Instructs to provide a specific page of the collection
            at a given index.
        </td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>`xsd:nonNegativeInteger`</td>
    </tr>
</table>
<div class="example" heading="hydra:pageIndex">
<xmp highlight="json-ld" line-highlight="45">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,page,limit}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "page",
                "property": "hydra:pageIndex",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:pageReference ## {#property-pageReference}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:pageReference">pageReference</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            Instructs to provide a specific page reference
            of the collection.
        </td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
</table>
<div class="example" heading="hydra:pageReference">
<xmp highlight="json-ld" line-highlight="45">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,partOfDay,limit}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "partOfDay",
                "property": "hydra:pageReference",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:possibleStatus ## {#property-possibleStatus}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:possibleStatus">possibleStatus</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            A status that might be returned by the Web API (other
            statuses should be expected and properly handled as well).
        </td>
    </tr>
    <tr>
        <th>Domain includes:</th>
        <td>[=ApiDocumentation=], [=Operation=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>[=Status=]</td>
    </tr>
</table>
<div class="example" heading="hydra:possibleStatus">
<xmp highlight="json-ld" line-highlight="9">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts/1",
    "operation": [
        {
            "method": "DELETE",
            "title": "Remove",
            "description": "Removes post no. 1",
            "possibleStatus": [
                {
                    "@type": "Status",
                    "statusCode": 303
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:possibleValue ## {#property-possibleValue}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:possibleValue">possibleValue</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>Possible value of the header.</td>
    </tr>
    <tr>
        <th>Min cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=HeaderSpecification=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>`xsd:string`</td>
    </tr>
</table>
<div class="example" heading="hydra:possibleValue">
<xmp highlight="json-ld" line-highlight="22,31">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:previous ## {#property-previous}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:previous">previous</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            The resource preceding the current instance
            in an interlinked set of resources.
        </td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=Resource=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>[=Resource=]</td>
    </tr>
</table>
<div class="example" heading="hydra:previous">
<xmp highlight="json-ld" line-highlight="10">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:property ## {#property-property}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:property">property</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>A property.</td>
    </tr>
    <tr>
        <th>Min cardinality:</th>
        <td>1</td> (only when used in context of [=memberAssertion=])
    </tr>
    <tr>
        <th>Domain includes:</th>
        <td>[=SupportedProperty=], [=IriTemplateMapping=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>`rdf:Property`</td>
    </tr>
</table>
<div class="example" heading="hydra:property in context of hydra:SupportedProperty">
<xmp highlight="json-ld" line-highlight="39">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>
<div class="example" heading="hydra:property in context of hydra:IriTemplateMapping">
<xmp highlight="json-ld" line-highlight="33,39,45">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>
<div class="example" heading="hydra:property in context of strongly typed collections">
<xmp highlight="json-ld" line-highlight="10">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api",
    "collection": [
        {
            "@id": "http://api.example.com/api/posts",
            "@type": "Collection",
            "memberAssertion": [
                {
                    "property": "rdf:type",
                    "object": "http://api.example.com/vocab#Post"
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:readable ## {#property-readable}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:readable">readable</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            True if the client can retrieve the property's value,
            false otherwise.
        </td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=SupportedProperty=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>`xsd:boolean`</td>
    </tr>
</table>
<div class="example" heading="hydra:readable">
<xmp highlight="json-ld" line-highlight="41">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:required ## {#property-required}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:required">required</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>True if the property is required, false otherwise.</td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Domain includes:</th>
        <td>[=SupportedProperty=], [=IriTemplateMapping=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>`xsd:boolean`</td>
    </tr>
</table>
<div class="example" heading="hydra:required in context of hydra:SupportedProperty">
<xmp highlight="json-ld" line-highlight="42">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>
<div class="example" heading="hydra:required in context of hydra:IriTemplateMapping">
<xmp highlight="json-ld" line-highlight="34,40,46">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:resolveRelativeUsing ## {#property-resolveRelativeUsing}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:resolveRelativeUsing">resolveRelativeUsing</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            Instructs on how to resolve relative Uri created
            by the Iri template resolution.
        </td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
</table>
<div class="example" heading="hydra:resolveRelativeUsing">
<xmp highlight="json-ld" line-highlight="29">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:returns ## {#property-returns}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:returns">returns</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>The information returned by the Web API on success.</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=Operation=]</td>
    </tr>
    <tr>
        <th>Range includes:</th>
        <td>
            `rdfs:Resource`,
            [=Resource=],
            `rdfs:Class`,
            [=Class=]
        </td>
    </tr>
</table>
<div class="example" heading="hydra:returns">
<xmp highlight="json-ld" line-highlight="18">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:returnsHeader ## {#property-returnsHeader}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:returnsHeader">returnsHeader</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>Name of the header returned by the operation.</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=Operation=]</td>
    </tr>
    <tr>
        <th>Range includes:</th>
        <td>
            `xsd:string`,
            [=HeaderSpecification=]
        </td>
    </tr>
</table>
<div class="example" heading="hydra:returnsHeader">
<xmp highlight="json-ld" line-highlight="19">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:search ## {#property-search}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:search">search</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>A Iri template that can be used to query a collection.</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=Resource=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>[=IriTemplate=]</td>
    </tr>
</table>
<div class="example" heading="hydra:search">
<xmp highlight="json-ld" line-highlight="27">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:statusCode ## {#property-statusCode}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:statusCode">statusCode</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            The response status code. Please note it may happen this
            value will be different to actual status code received.
        </td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=Status=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>`xsd:integer`</td>
    </tr>
</table>
<div class="example" heading="hydra:statusCode in context of hydra:Error">
<xmp highlight="http" line-highlight="11">
HTTP/1.1 400 Bad request
Content-Type: application/problem+json
Link: <http://www.w3.org/ns/hydra/error>; rel="http://www.w3.org/ns/json-ld#context"

{
    "type": "https://api.example.com/vocab#NullReferenceException",
    "@type": "http://www.w3.org/ns/hydra/core#Error",
    "title": "The request cannot be processed.",
    "detail": "Provided value cannot be 'null'.",
    "instance": "http://api.example.com/api/posts",
    "status": 404
}
</xmp>
</div>
<div class="example" heading="hydra:statusCode in context of hydra:Status">
<xmp highlight="json-ld" line-highlight="12">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts/1",
    "operation": [
        {
            "method": "DELETE",
            "title": "Remove",
            "description": "Removes post no. 1",
            "possibleStatus": [
                {
                    "@type": "Status",
                    "statusCode": 303
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:subject ## {#property-subject}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:subject">subject</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>The subject.</td>
    </tr>
    <tr>
        <th>Min cardinality:</th>
        <td>1</td>
    </tr>
</table>
<div class="example" heading="hydra:subject">
<xmp highlight="json-ld" line-highlight="7">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts/1/comments",
    "@type": "Collection",
    "memberAssertion": [
        {
            "subject": "http://api.example.com/api/posts/1",
            "property": "http://api.example.com/vocab#comment"
        }
    ]
}
</xmp>
</div>

## hydra:supportedClass ## {#property-supportedClass}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:supportedClass">supportedClass</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>A class known to be supported by the Web API.</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=ApiDocumentation=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>`rdfs:Class`</td>
    </tr>
</table>
<div class="example" heading="hydra:supportedClass">
<xmp highlight="json-ld" line-highlight="7">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:supportedOperation ## {#property-supportedOperation}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:supportedOperation">supportedOperation</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            An operation supported by instances of the specific Hydra
            class, or the target of the Hydra link, or Iri template.
        </td>
    </tr>
    <tr>
        <th>Domain includes:</th>
        <td>
            `rdfs:Class`,
            [=Class=],
            [=Link=],
            [=TemplatedLink=],
            [=SupportedProperty=]
        </td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>[=Operation=]</td>
    </tr>
</table>
<div class="example" heading="hydra:supportedOperation in context of hydra:SupportedClass">
<xmp highlight="json-ld" line-highlight="12">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>
<div class="example" heading="hydra:supportedOperation in context of hydra:TemplatedLink">
<xmp highlight="json-ld" line-highlight="30">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "supportedOperation": {
            "method": "POST"
        },
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>
<div class="example" heading="hydra:supportedOperation in context of hydra:Link">
<xmp highlight="json-ld" line-highlight="11">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@graph": [
        {
            "@id": "http://api.example.com/api/posts/1",
            "http://api.example.com/vocab#comment":
                "http://api.example.com/api/posts/1/comments"
        },
        {
            "@id": "http://api.example.com/vocab#comment",
            "@type": "hydra:Link",
            "supportedOperation": {
                "method": "GET",
                "returns": "http://api.example.com/vocab#Comment
            }
        }
    ]
}
</xmp>
</div>

## hydra:supportedProperty ## {#property-supportedProperty}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:supportedProperty">supportedProperty&lrm;</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>The properties known to be supported by a Hydra class.</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>`rdfs:Class`</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>[=SupportedProperty=]</td>
    </tr>
</table>
<div class="example" heading="hydra:supportedProperty">
<xmp highlight="json-ld" line-highlight="37">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:template ## {#property-template}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:template">template</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            A templated string with placeholders. The literal's
            datatype indicates the template syntax; if not specified,
            hydra:Rfc6570Template is assumed.
        </td>
    </tr>
    <tr>
        <th>Min cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=IriTemplate=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>[=Rfc6570Template=]</td>
    </tr>
</table>
<div class="example" heading="hydra:template">
<xmp highlight="json-ld" line-highlight="28">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:title ## {#property-title}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:title">title</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>A title, often used along with a description.</td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Domain includes:</th>
        <td>
            [=ApiDocumentation=],
            [=Status=],
            [=Class=],
            [=SupportedProperty=],
            [=Operation=],
            [=Link=],
            [=TemplatedLink=]
        </td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>`xsd:string`</td>
    </tr>
</table>
<div class="example" heading="hydra:title">
<xmp highlight="json-ld" line-highlight="10,15">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "title": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "title": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

## hydra:totalItems ## {#property-totalItems}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:totalItems">totalItems</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>The total number of items referenced by a collection.</td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=Collection=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>`xsd:integer`</td>
    </tr>
</table>
<div class="example" heading="hydra:totalItems">
<xmp highlight="json-ld" line-highlight="12,14">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:variable ## {#property-variable}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:variable">variable</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>An Iri template variable.</td>
    </tr>
    <tr>
        <th>Min cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=IriTemplateMapping=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>`xsd:string`</td>
    </tr>
</table>
<div class="example" heading="hydra:variable">
<xmp highlight="json-ld" line-highlight="32,38,44">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:variableRepresentation ## {#property-variableRepresentation}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:variableRepresentation">variableRepresentation&lrm;</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            The representation format to use when expanding
            the Iri template.
        </td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=IriTemplateMapping=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>[=VariableRepresentation=]</td>
    </tr>
</table>
<div class="example" heading="hydra:variableRepresentation">
<xmp highlight="json-ld" line-highlight="35,41,47">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",hydra:view
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:view ## {#property-view}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:view">view</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>A specific view of a resource.</td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
</table>
<div class="example" heading="hydra:view">
<xmp highlight="json-ld" line-highlight="5">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search,limit,offset}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:writable ## {#property-writable}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:writable">writable</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            True if the client can change the property's value,
            false otherwise.
        </td>
    </tr>
    <tr>
        <th>Max cardinality:</th>
        <td>1</td>
    </tr>
    <tr>
        <th>Domain:</th>
        <td>[=SupportedProperty=]</td>
    </tr>
    <tr>
        <th>Range:</th>
        <td>`xsd:boolean`</td>
    </tr>
</table>
<div class="example" heading="hydra:writable">
<xmp highlight="json-ld" line-highlight="40">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api?documentation",
    "@type": "ApiDocumentation",
    "entrypoint": "http://api.example.com/api",
    "extension": "https://w3id.org/hydra/extension#shacl",
    "supportedClass": [
        {
            "@id": "http://api.example.com/vocab#User",
            "label": "User",
            "description": "Describes a system user.",
            "supportedOperation": [
                {
                    "method": "PUT",
                    "label": "Create new user",
                    "description": "Creates a brand new user.",
                    "expects": "http://api.example.com/vocab#User",
                    "returns": "http://api.example.com/vocab#User",
                    "returnsHeader": [
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["text/turtle", "application/ld+json"],
                            "closedSet": true
                        }
                        "Content-Length"
                    ],
                    "expectsHeader": [
                        "Authorization",
                        {
                            "headerName": "Content-Type",
                            "possibleValue": ["image/gif", "image/png"],
                            "closedSet": true
                        }
                    ]
                }
            ],
            "supportedProperty": [
                {
                    "property": "http://api.example.com/vocab#login",
                    "writable": true,
                    "readable": true,
                    "required": true
                }
            ]
        }
    ]
}
</xmp>
</div>

Named instances {#named-instances}
===============

## hydra:BasicRepresentation ## {#instance-BasicRepresentation}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:BasicRepresentation">BasicRepresentation</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            A representation that serializes just the lexical form of a variable value,
            but omits language and type information.
        </td>
    </tr>
    <tr>
        <th>Sub-class of:</th>
        <td>[=VariableRepresentation=]</td>
    </tr>
</table>
<div class="example" heading="hydra:BasicRepresentation">
<xmp highlight="json-ld" line-highlight="35">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:ExplicitRepresentation ## {#instance-ExplicitRepresentation}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:ExplicitRepresentation">ExplicitRepresentation</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            A representation that serializes a variable value including its language
            and type information and thus differentiating between IRIs and literals.
        </td>
    </tr>
    <tr>
        <th>Sub-class of:</th>
        <td>[=VariableRepresentation=]</td>
    </tr>
</table>
<div class="example" heading="hydra:ExplicitRepresentation">
<xmp highlight="json-ld" line-highlight="35">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": "/api/posts{?search}",
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:ExplicitRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:LinkContext ## {#instance-LinkContext}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:LinkContext">LinkContext</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            States that the link's context IRI, as defined in RFC 5988, should be used
            as the base Uri.
        </td>
    </tr>
    <tr>
        <th>Sub-class of:</th>
        <td>[=BaseUriSource=]</td>
    </tr>
</table>
<div class="example" heading="hydra:LinkContext">
<xmp highlight="json-ld" line-highlight="32">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": {
            "@value": "/api/posts{?search}",
            "@type": "hydra:Rfc6570Template"
        },
        "resolveRelativeUsing": "hydra:LinkContext",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

## hydra:Rfc3986 ## {#instance-Rfc3986}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:Rfc3986">Rfc3986</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>
            States that the link's context IRI, as defined in RFC 5988, should be used
            as the base Uri.
        </td>
    </tr>
    <tr>
        <th>Sub-class of:</th>
        <td>[=BaseUriSource=]</td>
    </tr>
</table>
<div class="example" heading="hydra:LinkContext">
<xmp highlight="json-ld" line-highlight="32">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": {
            "@value": "/api/posts{?search}",
            "@type": "hydra:Rfc6570Template"
        },
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation"
            }
        ]
    }
}
</xmp>
</div>

Data types {#data-types}
==========

## hydra:Rfc6570Template ## {#datatype-Rfc6570Template}
<table class="def">
    <tr>
        <th>Name:</th>
        <td><dfn export id="hydra:Rfc6570Template">Rfc6570Template</dfn></td>
    </tr>
    <tr>
        <th>Summary:</th>
        <td>An IRI template as defined by [[!RFC6570]].</td>
    </tr>
</table>
<div class="example" heading="hydra:Rfc6570Template">
<xmp highlight="json-ld" line-highlight="30">
{
    "@context": "http://www.w3.org/ns/hydra/context.jsonld",
    "@id": "http://api.example.com/api/posts",
    "@type": "Collection",
    "view": {
        "@id": "http://api.example.com/api/posts?skip=10",
        "@type": "PartialCollectionView",
        "first": "http://api.example.com/api/posts",
        "last": "http://api.example.com/api/posts?skip=100",
        "previous": "http://api.example.com/api/posts",
        "next": "http://api.example.com/api/posts?skip=20",
        "totalItems": 10,
    },
    "totalItems": 100,
    "member": [
        { "@id": "http://api.example.com/api/posts/10" },
        { "@id": "http://api.example.com/api/posts/11" },
        { "@id": "http://api.example.com/api/posts/12" },
        { "@id": "http://api.example.com/api/posts/13" },
        { "@id": "http://api.example.com/api/posts/14" },
        { "@id": "http://api.example.com/api/posts/15" },
        { "@id": "http://api.example.com/api/posts/16" },
        { "@id": "http://api.example.com/api/posts/17" },
        { "@id": "http://api.example.com/api/posts/18" },
        { "@id": "http://api.example.com/api/posts/19" }
    ],
    "search": {
        "template": {
            "@value": "/api/posts{?search,limit,offset}",
            "@type": "hydra:Rfc6570Template"
        },
        "resolveRelativeUsing": "hydra:Rfc3986",
        "mapping": [
            {
                "variable": "search",
                "property": "hydra:freetextQuery",
                "required": true,
                "variableRepresentation": "hydra:BasicRepresentation""
            },
            {
                "variable": "limit",
                "property": "hydra:limit",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation""
            },
            {
                "variable": "offset",
                "property": "hydra:offset",
                "required": false,
                "variableRepresentation": "hydra:BasicRepresentation""
            }
        ]
    }
}
</xmp>
</div>

Acknowledgements {#acknowledgments}
================

Note: This section is non-normative.

The authors would like to thank the following individuals for contributing
their ideas and providing feedback for writing this specification:
Arnau Siches, elf Pavlik, Karol Szczepański, Mark Baker, Martijn Faassen,
Matthias Lehmann, Ruben Verborgh, Ryan J. McDonough, Sam Goto,
Thomas Hoppe, Tomasz Pluskiewicz, @wasabiwimp (on GitHub).

The Hydra in JSON-LD {#vocab-jsonld}
====================================

Note: This section is non-normative.

<pre class="include-code">
path: core.jsonld
highlight: json-ld
</pre>

The Hydra error context {#error-jsonld}
======================================================

Note: This section is non-normative.

<pre class="include-code">
path: error.jsonld
highlight: json-ld
</pre>

<pre class="biblio">
{
	"HydraCG": {
		"href": "https://www.w3.org/community/hydra/",
		"title": "Hydra W3C Community Group"
	}
}
</pre>